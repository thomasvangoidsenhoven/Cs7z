name: Publish NuGet Package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (e.g., 1.0.0)'
        required: false
        type: string

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
  
  publish:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    
    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        elif [ -n "${{ github.event.inputs.version }}" ]; then
          VERSION=${{ github.event.inputs.version }}
        else
          VERSION="1.0.0-preview-$(date +%Y%m%d%H%M%S)"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Using version: $VERSION"
    
    - name: Update project version
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${{ steps.version.outputs.VERSION }}<\/Version>/g" Cs7z.Archiving.Service.OmniPlatform/Cs7z.Archiving.Service.OmniPlatform.csproj
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    - name: Pack NuGet package
      run: dotnet pack Cs7z.Archiving.Service.OmniPlatform/Cs7z.Archiving.Service.OmniPlatform.csproj --configuration Release --no-build --output ./artifacts
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./artifacts/*.nupkg
    
    - name: Publish to NuGet.org
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.version != '')
      run: |
        dotnet nuget push ./artifacts/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true